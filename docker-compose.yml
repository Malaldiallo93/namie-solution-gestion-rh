version: '3.8'

services:
  # Base de donn√©es MySQL
  mysql:
    image: mysql:8.0
    container_name: hr-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: hr_dashboard
      MYSQL_USER: hr_user
      MYSQL_PASSWORD: hr_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-config-template.txt:/etc/mysql/conf.d/custom.cnf
    networks:
      - hr-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Cache Redis
  redis:
    image: redis:7-alpine
    container_name: hr-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hr-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 20s
      retries: 10

  # Backend Laravel principal
  backend:
    build:
      context: ./hr-backend
      dockerfile: Dockerfile
    container_name: hr-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=hr_dashboard
      - DB_USERNAME=hr_user
      - DB_PASSWORD=hr_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=http://localhost:8000
    volumes:
      - ./hr-backend:/var/www/html
      - ./hr-backend/storage:/var/www/html/storage
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hr-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      timeout: 30s
      retries: 5

  # Frontend React
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hr-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      - VITE_API_URL=http://localhost:8000/api
    depends_on:
      - backend
    networks:
      - hr-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      timeout: 30s
      retries: 5

  # API Gateway Nginx
  api-gateway:
    image: nginx:alpine
    container_name: hr-api-gateway
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./docker/nginx/api-gateway.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
    networks:
      - hr-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      timeout: 30s
      retries: 5

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  hr-network:
    driver: bridge 