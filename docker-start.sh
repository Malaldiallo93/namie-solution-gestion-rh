#!/bin/bash

# Script pour d√©marrer l'√©cosyst√®me Docker HR Dashboard
# Auteur: Assistant IA

echo "üê≥ D√©marrage de l'√©cosyst√®me Docker HR Dashboard..."

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m'

# Fonction pour afficher un titre
print_title() {
    echo -e "\n${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${PURPLE}  $1${NC}"
    echo -e "${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
}

print_title "V√âRIFICATION DE DOCKER"

# V√©rifier si Docker est install√©
if ! command -v docker &> /dev/null; then
    echo -e "${RED}‚ùå Docker n'est pas install√©${NC}"
    echo -e "${YELLOW}üí° Installez Docker Desktop depuis https://www.docker.com/products/docker-desktop${NC}"
    exit 1
fi

# V√©rifier si Docker daemon est d√©marr√©
if ! docker info &> /dev/null; then
    echo -e "${RED}‚ùå Docker daemon n'est pas d√©marr√©${NC}"
    echo -e "${YELLOW}üí° D√©marrez Docker Desktop et r√©essayez${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Docker est disponible${NC}"

print_title "ARR√äT DES CONTENEURS EXISTANTS"

echo -e "${BLUE}üõë Arr√™t des conteneurs existants...${NC}"
docker-compose down --remove-orphans

print_title "CONSTRUCTION DES IMAGES"

echo -e "${BLUE}üî® Construction des images Docker...${NC}"
docker-compose build --no-cache

print_title "D√âMARRAGE DES SERVICES"

echo -e "${BLUE}üöÄ D√©marrage de l'√©cosyst√®me...${NC}"
docker-compose up -d

echo -e "\n${BLUE}‚è≥ Attente du d√©marrage des services...${NC}"
sleep 30

print_title "V√âRIFICATION DES SERVICES"

echo -e "${BLUE}üìä V√©rification du statut des conteneurs...${NC}"
docker-compose ps

echo -e "\n${BLUE}üè• V√©rification des health checks...${NC}"

# Test API Gateway
if curl -s http://localhost:8080/health | grep -q "healthy"; then
    echo -e "${GREEN}‚úÖ API Gateway: http://localhost:8080/health${NC}"
else
    echo -e "${RED}‚ùå API Gateway: Non accessible${NC}"
fi

# Test Frontend
if curl -s http://localhost:80 | grep -q "html"; then
    echo -e "${GREEN}‚úÖ Frontend: http://localhost:80${NC}"
else
    echo -e "${RED}‚ùå Frontend: Non accessible${NC}"
fi

# Test Backend
if curl -s http://localhost:8000/api/health | grep -q "healthy"; then
    echo -e "${GREEN}‚úÖ Backend: http://localhost:8000/api/health${NC}"
else
    echo -e "${RED}‚ùå Backend: Non accessible${NC}"
fi

# Test MySQL
if docker exec hr-mysql mysqladmin ping -h localhost &> /dev/null; then
    echo -e "${GREEN}‚úÖ MySQL: localhost:3306${NC}"
else
    echo -e "${RED}‚ùå MySQL: Non accessible${NC}"
fi

# Test Redis
if docker exec hr-redis redis-cli ping | grep -q "PONG"; then
    echo -e "${GREEN}‚úÖ Redis: localhost:6379${NC}"
else
    echo -e "${RED}‚ùå Redis: Non accessible${NC}"
fi

echo -e "\n${BLUE}üîç Test du service discovery...${NC}"
if curl -s http://localhost:8080/services | grep -q "services"; then
    echo -e "${GREEN}‚úÖ Service Discovery: http://localhost:8080/services${NC}"
else
    echo -e "${RED}‚ùå Service Discovery: Non accessible${NC}"
fi

print_title "MIGRATION DE LA BASE DE DONN√âES"

echo -e "${BLUE}üóÑÔ∏è  Ex√©cution des migrations...${NC}"
docker exec hr-backend php artisan migrate --force

echo -e "${BLUE}üå± Ex√©cution des seeders...${NC}"
docker exec hr-backend php artisan db:seed --force

print_title "R√âSUM√â"

echo -e "${GREEN}üéâ √âcosyst√®me Docker HR Dashboard d√©marr√© avec succ√®s!${NC}"

echo -e "\n${BLUE}üìã URLs d'acc√®s:${NC}"
echo -e "   ${GREEN}Frontend:           http://localhost:80${NC}"
echo -e "   ${GREEN}Backend API:        http://localhost:8000${NC}"
echo -e "   ${GREEN}API Gateway:        http://localhost:8080${NC}"
echo -e "   ${GREEN}MySQL:              localhost:3306${NC}"
echo -e "   ${GREEN}Redis:              localhost:6379${NC}"

echo -e "\n${BLUE}üîß Commandes utiles:${NC}"
echo -e "   ${YELLOW}Arr√™ter:            docker-compose down${NC}"
echo -e "   ${YELLOW}Logs:               docker-compose logs -f${NC}"
echo -e "   ${YELLOW}Red√©marrer:         docker-compose restart${NC}"
echo -e "   ${YELLOW}Rebuild:            docker-compose up --build${NC}"
echo -e "   ${YELLOW}Shell Backend:      docker exec -it hr-backend sh${NC}"
echo -e "   ${YELLOW}Shell MySQL:        docker exec -it hr-mysql mysql -u hr_user -p hr_dashboard${NC}"

echo -e "\n${BLUE}üìä Test rapide:${NC}"
echo -e "   ${YELLOW}curl http://localhost:8000/api/health${NC}"
echo -e "   ${YELLOW}curl http://localhost:8000/api/employees${NC}"
echo -e "   ${YELLOW}curl http://localhost:8000/api/dashboard/metrics${NC}"

echo -e "\n${PURPLE}‚ú® L'application est pr√™te √† √™tre utilis√©e!${NC}" 